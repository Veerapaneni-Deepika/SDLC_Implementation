        -:    0:Source:src/addBook.c
        -:    1:#include "fun.h"
        -:    2:
        1:    3:error_t addBookInDataBase(const char* FILE_NAME)
        -:    4:{
        1:    5:    s_BooksInfo addBookInfoInDataBase = {0};
        1:    6:    FILE *fp = NULL;
        1:    7:    error_t status = FAILURE;
        1:    8:    fp = fopen(FILE_NAME,"ab+");
        1:    8-block  0
        1:    9:    if(fp == NULL)
        -:   10:    {
    #####:   11:        printf("File is not opened\n");
    %%%%%:   11-block  0
    #####:   12:        return FILE_NOT_FOUND;
        -:   13:    }
        1:   14:    printf("\nADD NEW BOOKS\n");
        1:   14-block  0
        1:   15:    printf("\nENTER YOUR DETAILS BELOW:");
        1:   16:    printf("\nBook ID NO  = ");
        1:   17:    fflush(stdin);
        1:   18:    scanf("%u",&addBookInfoInDataBase.books_id);
        -:   19:    do
        -:   20:    {
        7:   21:        printf("\nBook Name  = ");
        7:   21-block  0
        7:   22:        fflush(stdin);
        7:   23:        fgets(addBookInfoInDataBase.bookName,MAX_BOOK_NAME,stdin);
        7:   24:        status = isNameValid(addBookInfoInDataBase.bookName);
        7:   25:        if (!status)
        -:   26:        {
        6:   27:            printf("\nName contain invalid character. Please enter again.");
        6:   27-block  0
        -:   28:        }
        -:   29:    }
        7:   30:    while(!status);
        7:   30-block  0
        -:   31:    do
        -:   32:    {
        1:   33:        printf("\nAuthor Name  = ");
        1:   33-block  0
        1:   34:        fflush(stdin);
        1:   35:        fgets(addBookInfoInDataBase.authorName,MAX_AUTHOR_NAME,stdin);
        1:   36:        status = isNameValid(addBookInfoInDataBase.authorName);
        1:   37:        if (!status)
        -:   38:        {
    #####:   39:            printf("\nName contain invalid character. Please enter again.");
    %%%%%:   39-block  0
        -:   40:        }
        -:   41:    }
        1:   42:    while(!status);
        1:   42-block  0
        -:   43:    do
        -:   44:    {
        1:   45:        printf("\nStudent Name  = ");
        1:   45-block  0
        1:   46:        fflush(stdin);
        1:   47:        fgets(addBookInfoInDataBase.studentName,MAX_STUDENT_NAME,stdin);
        1:   48:        status = isNameValid(addBookInfoInDataBase.studentName);
        1:   49:        if (!status)
        -:   50:        {
    #####:   51:            printf("\nName contain invalid character. Please enter again.");
    %%%%%:   51-block  0
        -:   52:        }
        -:   53:    }
        1:   54:    while(!status);
        1:   54-block  0
        -:   55:    /*do
        -:   56:    {
        -:   57:        printf("\nEnter date in format (day/month/year) when it was issue: ");
        -:   58:        scanf("%d/%d/%d",&addBookInfoInDataBase.bookIssueDate.dd,&addBookInfoInDataBase.bookIssueDate.mm,&addBookInfoInDataBase.bookIssueDate.yyyy);
        -:   59:        status = isValidDate(&addBookInfoInDataBase.bookIssueDate);
        -:   60:        if (!status)
        -:   61:        {
        -:   62:            printf("\nPlease enter a valid date.\n");
        -:   63:        }
        -:   64:    }
        -:   65:    while(!status);*/
        -:   66:    
        -:   67:    Date d;
        1:   68:    d.dd=addBookInfoInDataBase.bookIssueDate.dd;
        1:   69:    d.mm=addBookInfoInDataBase.bookIssueDate.mm;
        1:   70:    d.yyyy=addBookInfoInDataBase.bookIssueDate.yyyy;
        1:   71:    addDate(&d);
        1:   71-block  0
        1:   72:    addBookInfoInDataBase.returnDate.dd=d.dd;
        1:   73:    addBookInfoInDataBase.returnDate.mm=d.mm;
        1:   74:    addBookInfoInDataBase.returnDate.yyyy=d.yyyy;
        -:   75:    
        1:   76:    fwrite(&addBookInfoInDataBase,sizeof(addBookInfoInDataBase), 1, fp);
        1:   77:    fclose(fp);
        1:   78:    return SUCCESS;
        -:   79:}
